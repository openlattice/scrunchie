/*
 * Copyright (C) 2017. Kryptnostic, Inc (dba Loom)
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 *
 * You can contact the owner of the copyright at support@thedataloom.com
 */

plugins {
    id "application"
    id "java"
    id "eclipse"
    id "idea"
    id "jacoco"
    id 'com.github.johnrengelman.shadow' version '1.2.3'
}

description = "Kryptnostic Spark RPC Library"
group = "com.kryptnostic"
ext.projectName = "kindling"
ext.scmUrl = 'scm:git:https://github.com/dataloom/kindling.git'
ext.connectionUrl = 'scm:git:https://github.com/dataloom/kindling.git'
ext.developerConnectionUrl = 'scm:git:https://github.com/dataloom/kindling.git'

apply from: 'https://raw.githubusercontent.com/kryptnostic/gradles/master/kryptnostic.gradle'

mainClassName = "com.kryptnostic.sparks.Kindling"
applicationDefaultJvmArgs = ["-Xmx4G","-Xms4G","-server"]
ext.sourceCompatibility=JavaVersion.VERSION_1_8
ext.targetCompatibility=JavaVersion.VERSION_1_8

configurations {
    provided
}

sourceSets {
    main.compileClasspath += configurations.provided
    test.compileClasspath += configurations.provided
    test.runtimeClasspath += configurations.provided
}

configurations.all {
  resolutionStrategy {
    force 'com.fasterxml.jackson.core:jackson-core:2.6.5','com.fasterxml.jackson.core:jackson-databind:2.6.5','com.fasterxml.jackson.module:jackson-module-afterburner:2.6.5','com.fasterxml.jackson.datatype:jackson-datatype-guava:2.6.5','com.fasterxml.jackson.dataformat:jackson-dataformat-smile:2.6.5','com.fasterxml.jackson.module:jackson-module-jaxb-annotations:2.6.5','com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:2.6.5','com.fasterxml.jackson.jaxrs:jackson-jaxrs-json-provider:2.6.5'
  }
  exclude module: 'slf4j-log4j12'
}

dependencies {
    compile "com.fasterxml.jackson.dataformat:jackson-dataformat-csv:${jackson_version}"
    compile  "com.datastax.spark:spark-cassandra-connector_2.11:${spark_cassandra_connector_version}"
    provided "org.apache.spark:spark-core_2.11:${spark_version}"
    provided "org.apache.spark:spark-sql_2.11:${spark_version}"
    provided "org.apache.spark:spark-mllib_2.11:${spark_version}"
    provided "org.apache.spark:spark-graphx_2.11:${spark_version}"
    provided "org.apache.spark:spark-streaming_2.11:${spark_version}"
    

	/*
	 * Kryptnostic dependencies
	 */
	if (project.hasProperty("developmentMode") && project.developmentMode) {
        logger.quiet(project.name + " using project dependencies.")
        
        compile( project(":loom-api") ) {
            exclude module: 'cassandra-driver-core'
            exclude module: 'cassandra-driver-mapping'
            exclude module: 'cassandra-driver-extras'
        }

        compile( project(":conductor-client") ) {
            exclude module: 'cassandra-driver-core'
            exclude module: 'cassandra-driver-mapping'
            exclude module: 'cassandra-driver-extras'
        }

        testCompile( project(path: ":rhizome", configuration: "tests")) {
            exclude module: 'cassandra-driver-core'
            exclude module: 'cassandra-driver-mapping'
            exclude module: 'cassandra-driver-extras'
        }

        testCompile( project(":datastore")) {
            exclude module: 'cassandra-driver-core'
            exclude module: 'cassandra-driver-mapping'
            exclude module: 'cassandra-driver-extras'
        }

        testCompile( project(path: ":rhizome-client", configuration: "tests")) 
        
    }
    else {
        logger.quiet(project.name + " using jar dependencies.")

        compile ("com.kryptnostic:loom-api:${loom_api_version}"){
            exclude module: 'cassandra-driver-core'
            exclude module: 'cassandra-driver-mapping'
            exclude module: 'cassandra-driver-extras'
        }

        compile ("com.kryptnostic:conductor-client:${conductor_client_version}"){
            exclude module: 'cassandra-driver-core'
            exclude module: 'cassandra-driver-mapping'
            exclude module: 'cassandra-driver-extras'
        }
        
        testCompile ("com.kryptnostic:rhizome:${rhizome_version}:tests"){
            exclude module: 'cassandra-driver-core'
            exclude module: 'cassandra-driver-mapping'
            exclude module: 'cassandra-driver-extras'
        }
        
        testCompile "com.kryptnostic:rhizome-client:${rhizome_client_version}:tests"
    } 

     /**
      * Cassandra
      */
    compile group: 'com.datastax.cassandra', name: 'cassandra-driver-mapping', version: "${cassandra_driver_version}"
    compile group: 'com.datastax.cassandra', name: 'cassandra-driver-extras', version: "${cassandra_driver_version}"
    
   	 /*
      * ELASTICSEARCH
      */
     compile ("org.elasticsearch:elasticsearch:5.1.1") {
     	exclude module: 'slf4j-log4j12'
     }
     compile ("org.elasticsearch:elasticsearch-spark-20_2.11:5.1.1") {
     	exclude module: 'apache-curator'
     	exclude module: 'slf4j-log4j12'
     }
     compile ("org.elasticsearch.client:transport:5.1.1") {
     	exclude module: 'slf4j-log4j12'
     }
    
    /*
     * TESTING
     */
    testCompile "junit:junit:${junit_version}"
    testCompile "org.mockito:mockito-core:2.2.7";
 }

eclipse {
    ext.downloadSources = true
    ext.downloadJavadoc = true
    ext.sourceCompatibility=JavaVersion.VERSION_1_8
    ext.targetCompatibility=JavaVersion.VERSION_1_8
}

idea {
    ext.downloadSources = true
    ext.downloadJavadoc = true
    ext.sourceCompatibility = JavaVersion.VERSION_1_8
    ext.targetCompatibility = JavaVersion.VERSION_1_8
}

shadowJar{
    zip64 true
}
eclipse.classpath.plusConfigurations += [configurations.provided] 
