plugins {
    id "application"
    id "java"
    id "eclipse"
    id "idea"
    id "jacoco"
    id 'com.github.johnrengelman.shadow' version '1.2.3'
}

description = "Kryptnostic Spark RPC Library"
group = "com.kryptnostic"
ext.projectName = "kindling"

apply from: "http://api.krypt.int/gradle/kryptnostic.gradle"

mainClassName = "com.kryptnostic.sparks.Kindling"
applicationDefaultJvmArgs = ["-Xmx4G","-Xms4G","-server"]
ext.sourceCompatibility=JavaVersion.VERSION_1_8
ext.targetCompatibility=JavaVersion.VERSION_1_8

repositories {
    mavenLocal()
}

ext.cassandra_driver_version='3.0.2'
ext.snappy_version='1.1.2.1'
ext.lz4_version='1.3'
ext.netty_epoll_version='4.0.36.Final'
ext.netty_os_arch='linux-x86_64'


configurations {
    provided
}

sourceSets {
    main.compileClasspath += configurations.provided
    test.compileClasspath += configurations.provided
    test.runtimeClasspath += configurations.provided
}

dependencies {
    compile "com.fasterxml.jackson.dataformat:jackson-dataformat-csv:${jackson_version}"
    compile "com.datastax.spark:spark-cassandra-connector-java_2.10:${spark_cassandra_connector_version}"
    provided "org.apache.spark:spark-core_2.10:${spark_version}"
    provided "org.apache.spark:spark-sql_2.10:${spark_version}"
    provided "org.apache.spark:spark-mllib_2.10:${spark_version}"
    provided "org.apache.spark:spark-graphx_2.10:${spark_version}"
    provided "org.apache.spark:spark-streaming_2.10:${spark_version}"
    
	/*
	 * Kryptnostic dependencies
	 */
	if (project.hasProperty("developmentMode") && project.developmentMode) {
        logger.quiet(project.name + " using project dependencies.")
        compile project(":kryptnostic-conductor-client")
    }
    else {
        logger.quiet(project.name + " using jar dependencies.")
        compile "com.kryptnostic:kryptnostic-conductor-client:${conductor_client_version}"
    } 

     /**
      * Cassandra
      */
    compile group: 'com.datastax.cassandra', name: 'cassandra-driver-core', version: "${cassandra_driver_version}"
    compile group: 'com.datastax.cassandra', name: 'cassandra-driver-extras', version: "${cassandra_driver_version}"
    compile group: 'com.datastax.cassandra', name: 'cassandra-driver-mapping', version: "${cassandra_driver_version}"
    compile "org.xerial.snappy:snappy-java:${snappy_version}"
    compile "net.jpountz.lz4:lz4:${lz4_version}"
    compile "io.netty:netty-transport-native-epoll:${netty_epoll_version}:${netty_os_arch}"

 }

eclipse {
    ext.downloadSources = true
    ext.downloadJavadoc = true
    ext.sourceCompatibility=JavaVersion.VERSION_1_8
    ext.targetCompatibility=JavaVersion.VERSION_1_8
}

idea {
    ext.downloadSources = true
    ext.downloadJavadoc = true
    ext.sourceCompatibility = JavaVersion.VERSION_1_8
    ext.targetCompatibility = JavaVersion.VERSION_1_8
}

eclipse.classpath.plusConfigurations += [configurations.provided] 

task sourcesJar(type : Jar) {
  classifier = 'sources'
  from sourceSets.main.allSource
}

task javadocJar(type: Jar) {
    classifier = 'javadoc'
    from javadoc
}

